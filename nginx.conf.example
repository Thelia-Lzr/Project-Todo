# ToList 项目 Nginx 反向代理配置
# 使用方法：在宝塔面板网站配置文件中复制此内容到相应位置

# ============================================
# 上游服务器定义
# ============================================

upstream nodejs_backend {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 64;
}

upstream python_backend {
    server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
    keepalive 64;
}

# ============================================
# HTTP 到 HTTPS 重定向
# ============================================

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;
    
    # 重定向到 HTTPS
    return 301 https://$server_name$request_uri;
}

# ============================================
# HTTPS 主配置
# ============================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;
    
    # SSL 证书路径（宝塔会自动配置）
    ssl_certificate /www/server/panel/vhost/cert/yourdomain.com/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/yourdomain.com/privkey.pem;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json;
    
    # 日志配置
    access_log /www/wwwroot/yourdomain.com/log/access.log;
    error_log /www/wwwroot/yourdomain.com/log/error.log;
    
    # 项目根目录
    root /www/wwwroot/yourdomain.com;
    
    # ============================================
    # 静态文件缓存
    # ============================================
    
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # ============================================
    # API 路由 - Python Gemini 后端
    # ============================================
    
    location /api/gemini/ {
        proxy_pass http://python_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # ============================================
    # 所有其他请求 - Node.js 主应用
    # ============================================
    
    location / {
        proxy_pass http://nodejs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # ============================================
    # 禁止访问某些文件
    # ============================================
    
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ============================================
    # 安全头配置
    # ============================================
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
}

# ============================================
# 配置说明
# ============================================

# 1. 将 yourdomain.com 替换为你的实际域名
# 2. 将 SSL 证书路径替换为实际路径（宝塔会自动设置）
# 3. 将 /www/wwwroot/yourdomain.com 替换为实际项目路径
# 4. 确保 Node.js 应用运行在 3000 端口
# 5. 确保 Python 应用运行在 5000 端口

# ============================================
# 故障排查
# ============================================

# 检查 Nginx 语法：
# nginx -t

# 重启 Nginx：
# systemctl restart nginx

# 查看 Nginx 日志：
# tail -f /www/wwwroot/yourdomain.com/log/access.log

# 检查后端服务是否运行：
# curl http://127.0.0.1:3000
# curl http://127.0.0.1:5000
