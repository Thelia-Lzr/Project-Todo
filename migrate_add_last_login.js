const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'database.db');

console.log('ЁЯФД х╝АхзЛцХ░цНох║Уш┐Бчз╗я╝Ъц╖╗хКа last_login хнЧцо╡...');

const db = new sqlite3.Database(dbPath, (err) => {
    if (err) {
        console.error('тЭМ ш┐ЮцОецХ░цНох║Ухд▒ш┤е:', err);
        process.exit(1);
    }

    console.log('тЬЕ цИРхКЯш┐ЮцОехИ░цХ░цНох║У');

    // ц╖╗хКа last_login хнЧцо╡
    db.run(`ALTER TABLE users ADD COLUMN last_login DATETIME`, (err) => {
        if (err) {
            if (err.message.includes('duplicate column')) {
                console.log('тЪая╕П  last_login хнЧцо╡х╖▓хнШхЬия╝МцЧащЬАц╖╗хКа');
            } else {
                console.error('тЭМ ц╖╗хКахнЧцо╡хд▒ш┤е:', err);
                db.close();
                process.exit(1);
            }
        } else {
            console.log('тЬЕ цИРхКЯц╖╗хКа last_login хнЧцо╡');
        }

        // щкМшпБхнЧцо╡цШпхРжхнШхЬи
        db.all("PRAGMA table_info(users)", [], (err, rows) => {
            if (err) {
                console.error('тЭМ цЯешпвшбич╗УцЮДхд▒ш┤е:', err);
            } else {
                console.log('\nЁЯУЛ Users шбич╗УцЮД:');
                rows.forEach(row => {
                    console.log(`  - ${row.name} (${row.type})`);
                });
            }

            db.close(() => {
                console.log('\nтЬЕ цХ░цНох║Уш┐Бчз╗хоМцИРя╝Б');
                process.exit(0);
            });
        });
    });
});
